{"name":"Get Selected Actors","permission":{"default":0,"lJd2UG8Ya5xToTqx":3},"type":"script","flags":{},"scope":"global","command":"// This is a general way to get all selected actors.\r\n//can be altered to get just one, etc. \r\n\r\n//all controlled characters\r\nconst tokens = canvas.tokens.controlled;\r\n\r\n//pull out the actor entities\r\nlet actors = tokens.map(o => o.actor);\r\n\r\n\r\nif (!actors.length) ui.notifications.warn(\"No applicable actor(s) found\");\r\nelse {\r\n    console.log(\"Here are the selected actors\", actors);\r\n}","author":"lJd2UG8Ya5xToTqx","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"4BsRRHkleGVpEcwe"}
{"name":"Switch Images","permission":{"default":0,"kTBKoVm1X7uMfP03":3},"type":"script","flags":{},"scope":"global","command":"let normalImg = 'https://runelords-foundry-vtt.s3.amazonaws.com/rise_of_the_runelords/actors/corvin/Corvin_McClane.png'\r\nlet active = 'https://runelords-foundry-vtt.s3.amazonaws.com/rise_of_the_runelords/actors/corvin/Corvin_throw.webm'\r\n\r\nlet tok = canvas.tokens.controlled[0];\r\nlet img = active\r\n\r\n\r\nconsole.log()\r\ntok.update({ img });\r\nsetTimeout(() =>\r\n{\r\nimg = normalImg\r\ntok.update({img})\r\n}  ,3000)\r\n","author":"kTBKoVm1X7uMfP03","img":"icons/svg/target.svg","actorIds":[],"_id":"7r4eH3prEBz3Wzxz"}
{"name":"Roll Skills For Selected","permission":{"default":0,"lJd2UG8Ya5xToTqx":3},"type":"script","flags":{},"scope":"global","command":"// CONFIGURATION\r\n// If one or more tokens are selected, those will be used instead of the listed actors\r\n// Leave the actorNames array empty to guess the players\r\n// Example actorNames: `actorNames: [\"Bob\", \"John\"],`\r\nconst c = {\r\n  actorNames: [],\r\n  skills: [\"per\", \"sen\", \"ste\", \"sur\"],\r\n  labels: [null, null, null, null],\r\n};\r\n// END CONFIGURATION\r\n\r\nconst tokens = canvas.tokens.controlled;\r\nlet actors = tokens.map(o => o.actor);\r\nif (!actors.length && c.actorNames.length) actors = game.actors.entities.filter(o => c.actorNames.includes(o.name));\r\nif (!actors.length) actors = game.actors.entities.filter(o => o.isPC && o.hasPerm(game.user, \"OWNER\"));\r\nactors = actors.filter(o => o.hasPerm(game.user, \"OWNER\"));\r\n\r\nif (!actors.length) ui.notifications.warn(\"No applicable actor(s) found\");\r\nelse {\r\n\r\n  c.skills = Object.keys(actor.data.data.skills)\r\n  const _roll = async function(type) {\r\n    for (let o of actors) {\r\n      await o.rollSkill(type, { event: new MouseEvent({}), skipDialog: true });\r\n    }\r\n  };\r\n\r\n  const buttons = c.skills.reduce((cur, s, a) => {\r\n    let label = c.labels[a];\r\n    if (label == null) label = CONFIG.PF1.skills[s] || \"Unknown Skill\";\r\n    cur[s] = {\r\n      label: label,\r\n      callback: () => _roll(s),\r\n    };\r\n    return cur;\r\n  }, {});\r\n\r\n  const msg = `Choose a skill to roll for the following actor(s): <strong>${actors.map(o => o.name).join(\"</strong>, <strong>\")}</strong>`;\r\n\r\n  new Dialog({\r\n    title: \"Roll Skills\",\r\n    content: `<p>${msg}</p>`,\r\n    buttons: buttons,\r\n  }).render(true);\r\n}","author":"lJd2UG8Ya5xToTqx","img":"systems/pf1/icons/feats/skill-focus.jpg","actorIds":[],"_id":"AorL5kyqqEtTqaE9"}
